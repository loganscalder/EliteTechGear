805/11500
1100/10000
4440/37000
1007/100732
728/8000
1667/9806
10000/122000
8460/6000
31500/41850
41850/31500
15/1500
1/500
35/2130
library('ProjectTemplate')
create.project("/Users/loganscalder/Independent Study/R/Statistical Inference/Project1")
?arctan
atan(.58)
?atan
atan(.58)*360/(2*pi)
5*sqrt(3)
1500*343/328
library(shiney)
library(shiny)
library("shiny")
child = read.csv("/Users/loganscalder/Downloads/child.csv")
child = read.csv("/Users/loganscalder/Downloads/child.csv")
other = read.csv("/Users/loganscalder/Downloads/other.csv")
data.frame(nrow(child), nrow(other), ncol(child), ncol(other))
names(child)
name(other)
names(other)
getwd()
writeUrls = function(recentFromDate, numberOfWeeks){#
FromDate = #
  as.Date("recentFromDate") - seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)#
FromDate = FromDate[order(FromDate)]#
ToDate = #
  FromDate + 6#
data.frame(FromDate, ToDate)#
#
urls = #
  paste0("open ",#
         "'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&filterToDate=", #
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&fromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&toDate=",#
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"#
  )#
#
write.csv(urls, "urls.csv")#
message("new urls to download weekly product performance are saved in a file called 'urls.csv'")#
}
writeUrls = function(recentFromDate = "2015-05-24", numberOfWeeks = 13){#
FromDate = #
  as.Date("recentFromDate") - seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)#
FromDate = FromDate[order(FromDate)]#
ToDate = #
  FromDate + 6#
data.frame(FromDate, ToDate)#
#
urls = #
  paste0("open ",#
         "'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&filterToDate=", #
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&fromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&toDate=",#
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"#
  )#
#
write.csv(urls, "urls.csv")#
message("new urls to download weekly product performance are saved in a file called 'urls.csv'")#
}
writeUrls("2015-09-27", 13)
recentFromDate = "2015-05-24"
numberOfWeeks = 13
FromDate =
as.Date("recentFromDate") - seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)
as.Date("recentFromDate")
FromDate = #
  as.Date("recentFromDate", format = "%Y-%m-%d") - #
  seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)
FromDate
FromDate = #
  as.Date(recentFromDate, format = "%Y-%m-%d") - #
  seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)
FromDate
FromDate = FromDate[order(FromDate)]
FromDate
ToDate =
FromDate + 6
data.frame(FromDate, ToDate)
urls =
paste0("open ",
"'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",
strftime(FromDate, format = "%m/%d/%Y"),
"&filterToDate=",
strftime(ToDate, format = "%m/%d/%Y"),
"&fromDate=",
strftime(FromDate, format = "%m/%d/%Y"),
"&toDate=",
strftime(ToDate, format = "%m/%d/%Y"),
"&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"
)
write.csv(urls, "urls.csv")
message("new urls to download weekly product performance are saved in a file called 'urls.csv'")
message(paste0("terminal commands to open urls with weekly product performance
are now saved under '", getwd(), "urls.csv'")
)
writeUrls = function(recentFromDate = "2015-05-24", numberOfWeeks = 13){#
FromDate = #
  as.Date(recentFromDate, format = "%Y-%m-%d") - #
  seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)#
FromDate = FromDate[order(FromDate)]#
ToDate = #
  FromDate + 6#
data.frame(FromDate, ToDate)#
#
urls = #
  paste0("open ",#
         "'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&filterToDate=", #
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&fromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&toDate=",#
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"#
  )#
setwd('/Users/loganscalder/Google Drive/EliteTechGear/Data/Weekly from "Detail Page Sales and Traffic"')#
write.csv(urls, "urls.csv")#
message(paste0("terminal commands to open urls with weekly product performance#
are now saved under '", getwd(), "urls.csv'")#
}#
# test#
getwd()#
writeUrls("2015-09-27", 13)
writeUrls = function(recentFromDate = "2015-05-24", numberOfWeeks = 13){#
FromDate = #
  as.Date(recentFromDate, format = "%Y-%m-%d") - #
  seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)#
FromDate = FromDate[order(FromDate)]#
ToDate = #
  FromDate + 6#
data.frame(FromDate, ToDate)#
#
urls = #
  paste0("open ",#
         "'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&filterToDate=", #
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&fromDate=",#
         strftime(FromDate, format = "%m/%d/%Y"), #
         "&toDate=",#
         strftime(ToDate, format = "%m/%d/%Y"), #
         "&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"#
  )#
setwd('/Users/loganscalder/Google Drive/EliteTechGear/Data/Weekly from "Detail Page Sales and Traffic"')#
write.csv(urls, "urls.csv")#
message(paste0("terminal commands to open urls with weekly product performance#
are now saved under '", getwd(), "urls.csv'")#
}
writeUrls("2015-09-27", 13)
writeUrls = function(recentFromDate = "2015-05-24", numberOfWeeks = 13){#
  FromDate = #
    as.Date(recentFromDate, format = "%Y-%m-%d") - #
    seq(from = 0, to = (numberOfWeeks-1)*7, by = 7)#
  FromDate = FromDate[order(FromDate)]#
  ToDate = #
    FromDate + 6#
  data.frame(FromDate, ToDate)#
  urls = #
    paste0("open ",#
           "'https://sellercentral.amazon.com/gp/site-metrics/report.html#&cols=/c0/c1/c2/c3/c4/c5/c6/c7/c8/c9/c10/c11/c12&sortColumn=13&filterFromDate=",#
           strftime(FromDate, format = "%m/%d/%Y"), #
           "&filterToDate=", #
           strftime(ToDate, format = "%m/%d/%Y"), #
           "&fromDate=",#
           strftime(FromDate, format = "%m/%d/%Y"), #
           "&toDate=",#
           strftime(ToDate, format = "%m/%d/%Y"), #
           "&reportID=102:DetailSalesTrafficBySKU&sortIsAscending=0&currentPage=0&dateUnit=1&viewDateUnits=ALL&runDate='"#
    )#
  setwd('/Users/loganscalder/Google Drive/EliteTechGear/Data/Weekly from Detail Page Sales and Traffic')#
  write.csv(urls, "urls.csv")#
  message(paste0("terminal commands to open urls with weekly product performance#
                 are now saved under ", getwd(), "/urls.csv'"))#
}#
writeUrls()
writeUrls(recent = "2015-09-27",
numberOfWeeks = 13)
writeUrls("2015-10-04", 8)
load("/Users/loganscalder/Google Drive/EliteTechGear/Data/Timeless/Shipment/Processed/processedShipmentData.RData")
